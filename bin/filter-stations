#!/usr/bin/env node
'use strict';

// This is a weird hand-maintained file with no real structure;
// we have to do some work to extract meaningful, accurate data

const fs = require('fs');

const TXT_FILE = process.argv[2];
const GSOD_DIR = process.argv[3];

const lines = fs.readFileSync(TXT_FILE, 'utf8').split('\n');
const gsodFiles = fs.readdirSync(GSOD_DIR, 'utf8');
const stationRx = /(\d\d\d\d\d\d-\d\d\d\d\d)-.*\.op/;
const stationIDs = gsodFiles.map((filename) => {
  let match = stationRx.exec(filename);
  return match ? match[1] : undefined;
});

// Find the header line
let i = 0;
while (i <= lines.length && lines[i] !== lines[i].toUpperCase()) i++;
const data = lines.slice(i + 2);

const stations = data.reduce((stations, line) => {
  // Filter out stations missing data
  let tokens = line.split(' ').filter(c => c !== '');
  if (tokens.length < 4) return stations;

  // Filter out non-US stations
  let usCol = tokens.indexOf('US');
  if (usCol === -1) return stations;

  // Filter out stations that we don't have historical weather data for
  let id = `${ tokens[0] }-${ tokens[1] }`;
  if (stationIDs.indexOf(id) === -1) return stations;

  // Filter out stations without locations
  let name = tokens.slice(2, usCol).join(' ');
  let location = tokens.filter(t => t[0] === '+' || t[0] === '-');
  if (location.length !== 3) return stations;

  let lat = location[0];
  let lon = location[1];

  stations.push({ id, name, lat, lon });
  return stations;
}, []);

console.log('id,name,lat,lon');
stations.forEach((s) => {
  console.log([s.id, s.name, s.lat, s.lon].join(','));
});
